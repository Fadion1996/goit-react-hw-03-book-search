{"version":3,"sources":["Components/BookList/BookListItem/book-list-item.module.css","Components/BookList/BookListItem/index.js","Components/BookList/index.js","Components/Loader/index.js","Components/SearchForm/index.js","App.js","index.js"],"names":["module","exports","card","details","media","actions","BookListItem","_this$props","this","props","_this$props$image","image","_this$props$title","title","_this$props$descripti","description","_this$props$author","author","_this$props$publisher","publisher","_this$props$published","publishedDate","_this$props$pageCount","pageCount","_this$props$rating","rating","react_default","a","createElement","index_es","className","styles","thumbnail","subheader","component","disableActionSpacing","aria-label","disabled","badgeContent","color","Favorite_default","Component","BookList","booksList","map","book","BookListItem_BookListItem","key","shortid","generate","imageLinks","authors","ratingsCount","Loader","dist_default","name","SearchForm","state","search","select","selectChange","event","_this","setState","target","value","searchChange","handleClick","onSubmit","_this2","genres","id","label","placeholder","margin","variant","onChange","genre","onClick","apiKey","App","books","isLoading","setUserOption","react","arguments","length","undefined","subject","axios","get","concat","then","response","Object","entries","data","items","item","catch","error","console","log","finally","SearchForm_SearchForm","Loader_Loader","BookList_BookList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f0f8906.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"book-list-item_card__2Jetc\",\"details\":\"book-list-item_details__QsQdO\",\"media\":\"book-list-item_media__2Tltp\",\"actions\":\"book-list-item_actions__2cED6\"};","import React, { Component } from 'react';\r\nimport {Card, CardHeader, CardMedia, CardContent, CardActions, IconButton, Typography, Badge} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nimport styles from './book-list-item.module.css'\r\n\r\nexport default class BookListItem extends Component {\r\n\r\n\r\n    render () {\r\n        const {image = '404', title = 'No data', description = 'No data', author = 'No name', publisher = 'No name', publishedDate = 'No data', pageCount = 'No data', rating = 0} = this.props;\r\n        return (\r\n            <Card className={styles.card}>\r\n                <CardMedia\r\n                    className={styles.media}\r\n                    image={image.thumbnail}\r\n                    title={title}\r\n                />\r\n                <div className={styles.details}>\r\n                    <CardHeader\r\n                        title={title}\r\n                        subheader={'Published date: ' + publishedDate}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography component=\"p\">\r\n                            <b>Publisher: </b>\r\n                            {publisher}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            <b>Authors: </b>\r\n                            {author}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            <b>Description: </b>\r\n                            {description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions className={styles.actions} disableActionSpacing>\r\n                        <IconButton aria-label=\"Add to favorites\" disabled>\r\n                            <Badge badgeContent={rating} color=\"primary\">\r\n                                <FavoriteIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <Typography component=\"p\">\r\n                            Pages: {pageCount}\r\n                        </Typography>\r\n                    </CardActions>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BookListItem from './BookListItem'\r\nimport shortid from 'shortid';\r\n\r\nimport './book-list.scss'\r\n\r\nexport default class BookList extends Component {\r\n\r\n    render () {\r\n        const {booksList} = this.props;\r\n        return (\r\n                <section className='book-list'>\r\n                    {booksList.map((book) => (\r\n                        <BookListItem key={shortid.generate()}\r\n                                      image = {book.imageLinks}\r\n                                      title = {book.title}\r\n                                      description = {book.description}\r\n                                      author = {book.authors}\r\n                                      publisher = {book.publisher}\r\n                                      publishedDate = {book.publishedDate}\r\n                                      pageCount = {book.pageCount}\r\n                                      rating = {book.ratingsCount}\r\n                        />\r\n                    ))}\r\n                </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './loader.scss'\r\nimport Spinner from 'react-spinkit'\r\n\r\nexport default class Loader extends Component {\r\n\r\n    render () {\r\n\r\n        return (\r\n            <section className=\"loader\">\r\n                <Spinner name=\"line-scale\" />\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {TextField, FormControl, MenuItem, Button} from '@material-ui/core';\r\nimport './search-form.scss'\r\nimport shortid from 'shortid';\r\n\r\nexport default class SearchForm extends Component {\r\n\r\n    state = {\r\n        search: '',\r\n        select: ''\r\n    };\r\n\r\n    selectChange = event => {\r\n        this.setState({ select: event.target.value });\r\n    };\r\n\r\n    searchChange = event => {\r\n        this.setState({ search: event.target.value });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onSubmit(this.state.search, this.state.select)\r\n    };\r\n\r\n    render () {\r\n        const {genres} = this.props;\r\n        return (\r\n            <section className=\"search-form\">\r\n                <TextField\r\n                    id=\"outlined-with-placeholder\"\r\n                    className='search-form-input'\r\n                    label=\"Search book\"\r\n                    placeholder=\"Enter name\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.search}\r\n                    onChange={this.searchChange}\r\n                />\r\n                <FormControl\r\n                    className='search-form-dropdown'>\r\n                    <TextField\r\n                        id=\"outlined-select-currency\"\r\n                        select\r\n                        label=\"Select genre\"\r\n                        className='search-form-dropdown-select'\r\n                        value={this.state.select}\r\n                        onChange={this.selectChange}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        {genres.map((genre) => (\r\n                            <MenuItem  className='search-form-dropdown-select-option' key={shortid.generate()} value={genre}>\r\n                                {genre}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={()=>this.handleClick()}>\r\n                    Search\r\n                </Button>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\nimport axios from 'axios'\nimport './app.scss';\n\nimport {BookList, Loader, SearchForm} from './Components'\nimport {Typography} from \"@material-ui/core\";\n\nconst apiKey = 'AIzaSyCy_9n4RfX6YAFvWQAw-dPPbLTUptnMLHs';\n\nclass App extends Component {\n    state = {\n        genres: [\"fantasy\", \"thriller\", \"drama\", \"mystery\", \"horror\", \"satire\", \"computers\"],\n        books: [],\n        isLoading: true,\n    };\n\n    componentDidMount() {\n        this.setUserOption();\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <SearchForm genres = {this.state.genres}  onSubmit = {this.setUserOption}/>\n                {(this.state.isLoading) ? <Loader/>\n                    : (this.state.books.length) ?\n                        <BookList booksList={this.state.books}/>\n                        : <Typography className='no-results' component='h4' variant='h4'>No results.</Typography>\n                }\n            </div>\n        );\n    };\n\n    setUserOption = (react = \"\", subject = \"\") => {\n        this.setState({\n            isLoading: true,\n            books: []\n        });\n        axios.get(`https://www.googleapis.com/books/v1/volumes?q=${react}+subject:${subject}&key=${apiKey}`)\n            .then((response) => {\n                // handle success\n                this.setState({isLoading: false});\n                Object.entries(response.data.items).map((item) => {\n                    if(item.length > 0) {\n                        this.setState({books: this.state.books.concat(item[1]['volumeInfo'])});\n                    }\n                    return null\n                });\n            })\n            .catch((error) => {\n                // handle error\n                this.setState({isLoading: false});\n                console.log(error);\n            })\n            .finally(() => {\n                this.setState({isLoading: false});\n                // always executed\n            });\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}